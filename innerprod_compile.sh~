#$BIN/bash
BIN=./bin/innerprod
SRC=./src/innerprod
SLA=./include/
BOOST=../boost_1_55_0
NTL=/usr/local/include/
GMP_LIB=/usr/local/lib/libgmp.a
NTL_LIB=/usr/local/lib/libntl.a

if [[ ! -f $BIN ]];
then
mkdir -p $BIN
fi

case $1 in

all)
$0 alice
$0 bob
$0 inputgen
$0 ti
;;

parties)
$0 alice
$0 bob
;;

ti)
echo "Compiling "$SRC"/innerprod_ti.cpp"
c++ -I $NTL -I $BOOST -I $SLA -m64 -o $BIN/innerprod_ti $SRC/innerprod_ti.cpp $NTL_LIB $GMP_LIB
exit 0
;;

inputgen)
echo "Compiling "$SRC"/innerprod_inputgen.cpp"
c++ -I $NTL -I $BOOST -I $SLA -m64 -o $BIN/innerprod_inputgen $SRC/innerprod_inputgen.cpp $NTL_LIB $GMP_LIB
exit 0
;;

bob)
echo "Compiling "$SRC"/innerprod_bob.cpp"
c++ -I $NTL -I $BOOST -I $SLA -m64 -o $BIN/innerprod_bob $SRC/innerprod_bob.cpp $BOOST/stage/lib/libboost_thread.a $BOOST/stage/lib/libboost_system.a -lrt -lpthread $NTL_LIB $GMP_LIB
exit 0
;;

alice)
echo "Compiling "$SRC"/innerprod_alice.cpp"
c++ -I $NTL -I $BOOST -I $SLA -m64 -o $BIN/innerprod_alice $SRC/innerprod_alice.cpp $BOOST/stage/lib/libboost_system.a $NTL_LIB $GMP_LIB
exit 0
;;

bin_alice)
echo "Compiling "$SRC"/innerprod_bin_alice.cpp"
c++ -I $BOOST -I $SLA -m64 -o $BIN/innerprod_bin_alice $SRC/innerprod_bin_alice.cpp $BOOST/stage/lib/libboost_system.a $BOOST/stage/lib/libboost_random.a
exit 0
;;

*)
    echo "Usage: $0 {bob|alice|ti|inputgen|bench}"
    exit 2
    ;;

esac
